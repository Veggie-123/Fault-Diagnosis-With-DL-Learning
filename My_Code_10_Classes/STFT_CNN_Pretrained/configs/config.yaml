# --------------------------------------------------
# 数据预处理配置文件 (config.yaml)
# --------------------------------------------------

data:
  # 原始 .mat 数据文件所在的目录路径
  data_path: '../data/matfiles'
  
  # .mat 文件名列表。
  # 这个列表的顺序至关重要，因为它直接决定了每个文件对应的数字标签 (从0开始)。
  # 推荐的顺序是：先放正常数据，然后按故障类型和故障程度依次排列。
  # 当前顺序: 0:正常, 1-3:007尺寸(内圈/滚珠/外圈), 4-6:014尺寸(内圈/滚珠/外圈), 7-9:021尺寸(内圈/滚珠/外圈)
  file_names:
    - 'normal_0.mat'     # 标签: 0
    - 'IR007_0.mat'      # 标签: 1
    - 'B007_0.mat'       # 标签: 2
    - 'OR007@6_0.mat'    # 标签: 3
    - 'IR014_0.mat'      # 标签: 4
    - 'B014_0.mat'       # 标签: 5
    - 'OR014@6_0.mat'    # 标签: 6
    - 'IR021_0.mat'      # 标签: 7
    - 'B021_0.mat'       # 标签: 8
    - 'OR021@6_0.mat'    # 标签: 9
  
  # 从每个时间序列的开头截取的数据点数量。
  # 为了保证每个文件提供相同数量的数据，我们通常会截取一个固定的长度。
  truncated_value: 102912
  
  # 定义每个样本的长度，也常被称为“窗口大小”。
  # 模型将一次性处理这么长的数据点。
  time_steps: 1024
  
  # 定义相邻两个样本之间的重叠比例 (0.0 到 1.0 之间)。
  # 0.5 表示下一个样本从上一个样本一半的位置开始，这有助于增加样本数量。
  overlap_ratio: 0.5
  
  # 指定最终生成的 CSV 文件的存放路径和文件名。
  csv_output_path: '../samples_data.csv'
  
  # --- 以下为 make_img_dataset.py 所需的新增配置 ---
  
  # 处理好的 samples_data.csv 文件路径
  csv_file_path: '../samples_data.csv'

  # 数据集划分比例 [训练集, 验证集, 测试集]
  split_ratios: [0.7, 0.2, 0.1]

  # 生成的时频图像的输出目录
  img_output_dir: '../data/STFTimages'

  # 生成图像的尺寸 (像素)
  image_size: 224

  # 原始信号的采样频率 (Hz)
  sampling_frequency: 12000

  # 短时傅里叶变换 (STFT) 的窗口大小
  stft_window_size: 64

  # 短时傅里叶变换 (STFT) 的窗口重叠率
  stft_overlap: 0.5

# --------------------------------------------------
# 模型和训练配置文件
# --------------------------------------------------

model:
  # 分类的类别总数，必须与 file_names 的数量一致
  num_classes: 10
  # 你可以为你的模型起一个名字，方便在保存结果时区分
  name: 'ResNet18_CWRU'
  # 是否使用在 ImageNet 上预训练的权重
  pretrained: true

train:
  # 训练的总轮次 (epochs)
  num_epochs: 50
  # 每个批次的大小 (batch_size)
  batch_size: 32
  # 优化器的学习率
  learning_rate: 0.001
  # 用于微调预训练层的学习率（当 pretrained=true 时生效）
  fine_tune_learning_rate: 0.0001
  # 保存模型权重和结果的目录
  checkpoint_dir: './checkpoints/run1'